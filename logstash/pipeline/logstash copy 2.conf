input {
  # Filebeat (TCP 5044)
  beats {
    port => 5044
  }

  # Прямой сбор Nginx логов
  file {
    path => "/var/log/nginx/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["direct_nginx"]
  }

  # TCP-вход для ручных команд (порт 5000)
  tcp {
    port => 5000
    codec => "line"
  }

  # UDP-вход для ручных команд (порт 5044)
  udp {
    port => 5044
    codec => "line"
  }
}

filter {
  # Обработка данных от Filebeat (nginx)
  if [fileset][module] == "nginx" and [fileset][name] == "access" {
    grok {
      match => { "message" => "%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]}( \"%{DATA:[nginx][access][referrer]}\")?( \"%{DATA:[nginx][access][agent]}\")?" }
      remove_field => "message"
    }
    date {
      match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
      target => "@timestamp"
    }
  }
  # Обработка прямого сбора nginx
  else if "direct_nginx" in [tags] {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
      remove_field => "message"
    }
    date {
      match => [ "timestamp", "dd/MMM/YYYY:H:m:s Z" ]
      target => "@timestamp"
    }
  }
  # Обработка произвольных TCP/UDP-сообщений
  else {
    grok {
      #match => { "message" => "%{IPORHOST:client_ip} %{WORD:method} %{NUMBER:status}" }
      match => { "message" => "%{IP:client} %{WORD:error} %{NUMBER:code}" }
      
    }
  }
}

output {
  stdout {
    #codec => rubydebug
  }

  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    # Для всех данных nginx
    index => "nginx-%{+YYYY.MM.dd}"
    # Для остальных данных (если нужно)
    # default_index => "other-%{+YYYY.MM.dd}"
  }
}