input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => "json"
  }

  udp {
    port => 5044
    #codec => "json"
  }

  file {
    path => "/var/log/nginx/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  # Обработка данных от Filebeat (nginx)
  if [fileset][module] == "nginx" and [fileset][name] == "access" {
    grok {
      match => { "message" => "%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]}( \"%{DATA:[nginx][access][referrer]}\")?( \"%{DATA:[nginx][access][agent]}\")?" }
      remove_field => "message"
    }

    grok {
    match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
    }


  }
  
  # Обработка произвольных TCP-сообщений
  else if [message] {
    grok {
      match => { "message" => "%{IPORHOST:client_ip} %{WORD:method} %{NUMBER:status}" }
    }
  }
}

output {
  stdout {  codec => rubydebug
  }

  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    # Для данных nginx от Filebeat
    index => "nginx-%{+YYYY.MM.dd}"
    # Для остальных данных
    manage_template => false
  }
}